#include <stdlib.h>

#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

#include <stdio.h>
#include <string.h>
int main(void){
	int domain = AF_INET;
	int type = SOCK_STREAM;//Connection-Oriented
	int protocol = 0;

	// Create the socket for the client
	int client_sd;
	client_sd = socket(domain, type, protocol);
	if (client_sd == -1){
		printf("error in creating socket for the client!\n");
		exit(1);
	}
	else
		printf("socket has created for the client with sd:%d\n", client_sd);
	
	// Info and connection to the server
	struct in_addr server_sin_address;
	server_sin_address.s_addr = inet_addr("127.0.0.1");
	int server_sin_port = htons(6969);

	struct sockaddr_in server_sin;
	server_sin.sin_family = domain;
	server_sin.sin_addr = server_sin_address;
	server_sin.sin_port = server_sin_port;
	
	int server_sin_len;
	int result = connect(client_sd, (struct sockaddr *) &server_sin, sizeof(server_sin));
	if (result == -1){
		printf("error in connecting to The Server at address:port = %d:%d\n", server_sin.sin_addr, server_sin.sin_port);
		exit(1);
	}
	else
		printf("client is connected to The Server at address:port = %d:%d\n", server_sin.sin_addr, server_sin.sin_port);

	while(1){
		// Write a program that:
		// Accepts two numbers from the user (me) as well as username and password
		// Store this information in an Array
		char input[35];
		char answer[25];
		int i = 0;

		// Fill char array with username, password, x and y
		// This could be better, but not important for this lab
		printf("Please input username, password, and values for x and y\n");
		printf("(with spaces between each).\n");
		fgets(input, 35, stdin);

		// Send that info to the server
		send(client_sd, input, 35, 0);
		
		// Receive the Server's answer and display it for the user
		recv(client_sd, answer, 25, 0);
		printf("The answer is %s.\n", answer);
	}
}
